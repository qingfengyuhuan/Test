1. 背景知识

 什么是离线批处理 ？？？
 数据一般会先落地，等到某个时间一次性的全部处理，这就是离线批处理 
 以后在生产的项目里面，得到很多报表（各个维度）：
	报表就是计算出来给一些领导看的指标 	
日报表 ：每天计算出这个维度相关的报表出来，时间就是天，现在的时间是18年 2 月3日，最快在2月3日的凌晨 计算 18年2月2日的数据，调度工具，crontab + shell 
周报表 ：
月报表：
 

 
 什么是流式，什么是实时 ？？
 
 数据只要是一产生，就立刻计算，场景：实时车流量，实时推荐
 
 长江大桥,上面有很多摄像头 + 车牌号，车速，suv/car/mpv...
 高峰期正常值 一分钟 ： 100-500
 车流量太大，超速
 车流量太小，拥堵
	这就是一个实时的结果
	
实时的概念，指的并不是说，数据产生之后，一定多少时间内能够产生结果，产生数据的时间和结果产生的时间又一个时间差，这个时间差叫实时性，实时性有实时性高，实时性低之分
都成为实时计算...

实时推荐 
	
	点什么商品，再去哪个网站，在那个广告地方就有你刚刚才点击这个商品的广告....
     推荐做成实时效果更好，更能提高用户转化率，做成离线效果可能就没有这个好，因为离线推送的结果是之前的推断出来的，可能和目前用户的需求发生了偏差，而且购买商品很多时候冲动性消费.
	
	
2. 目前在企业里面实时的技术有哪些 ？
	storm ： 历史比较长了，在慢慢被淘汰.
	sparkStreaming ， 慢慢的取代storm
	flink,流式计算比较新，处理起来比较快实时的技术，用的公司还比较少 ，字节跳动公司，今日头条，抖音，西瓜小视频，目前的实时全部是flink
 
	企业在用什么技术的时候，并不是这个越牛逼，就一定用，有很多现实的考虑，
	成本问题，可行性的问题？
	考虑有没有这方面的人才，这些人的成本问题 ， 实际项目中的配合问题....
	企业在实际做项目选型的时候，会偏向于一些更加成熟，稳定的技术方案...
	
	
storm： 优点： 实时性好，容错机制好
sparkStreaming： 实时性不如storm（也能满足绝大多数的场景，除非是毫秒级有困难），容错机制也不如storm,  
				优点：1. 降低了企业使用大数据成本（开发成本，人员成本，集群成本），sparkStreaming的代码和spark core的代码基本上是一样的
				      2. 可以非常方便的和 spark core ，spark sql做整合，处理一些更加的复杂的问题，storm不具备这样的能力
					  storm只能做一些纯实时的项目。
				容错这一块麻烦，后续专门讲解 
				
					  
	
 
 在2016-2017年  3700种技术，学目前非常主流的技术
	
 java ：oracle
 android ：google
 ios ： apple
 
 
 
 

 